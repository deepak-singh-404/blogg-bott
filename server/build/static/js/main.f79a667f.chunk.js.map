{"version":3,"sources":["redux/reducers/blogReducer.js","redux/reducers/userReducer.js","redux/reducers/errorReducer.js","redux/reducers/rootReducer.js","redux/store.js","redux/helper/setAuthToken.js","redux/actions/userAction.js","pages/ForgotPassword.jsx","components/Loader.jsx","components/LoginForm.jsx","components/SignUpForm.jsx","utils/categories.js","redux/actions/blogAction.js","components/BlogForm.jsx","components/UpdateBlog.jsx","components/Card.jsx","pages/Home.jsx","components/CategoryList.jsx","components/Navbar.jsx","components/DetailedBlog.jsx","App.js","index.js"],"names":["initialState","blogs","blogLoader","blogSuccess","category","filteredBlogs","author","blog","detailedBlog","blogReducer","state","action","type","payload","filter","obj","find","_id","map","user","isAuthenticated","loader","success","userReducer","registerErrors","loginErrors","forgotPasswordErrors","forgotPasswordHelperFlag","updatePasswordErrors","errorReducer","combineReducers","userRoot","blogRoot","errorRoot","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","setAuthToken","token","axios","defaults","headers","common","userLoginHelper","data","setLoader","userLogout","dispatch","localStorage","removeItem","withRouter","props","useSelector","useDispatch","history","useHistory","useState","email","setEmail","otp","setOtp","newPassword","setNewPassword","confirmNewPassword","setConfirmNewPassword","errors","setErrors","helper","setHelper","isLoading","setIsLoading","useEffect","className","noValidate","onSubmit","e","preventDefault","newPasswordWithOtp","a","method","url","alert","push","response","console","log","message","submitOTP","htmlFor","onChange","target","value","classnames","id","userEmail","placeholder","aria-describedby","class","role","Loader","disabled","aria-hidden","LoginForm","password","setPassword","tabIndex","aria-labelledby","data-dismiss","aria-label","userLoginCredentials","setItem","decoded","jwt_decode","valiue","to","SignUpForm","name","setName","confirmPassword","setConfirmPassword","userRegisterCredentials","Blogs","title","setBlog","setBlogs","setBlogLoader","deleteBlogHelper","updateBlogHelper","deailedBlogHelperDb","addBlog","blogData","updateBlog","BlogForm","blogStore","setTitle","setCategory","image","setImage","formHandler","formData","FormData","append","index","key","accept","files","img","UpdateBlog","updateFormHandler","Card","style","height","length","slice","onClick","data-toggle","data-target","width","src","Home","marginTop","CategoryList","React","memo","setauthor","aria-controls","aria-expanded","href","aria-haspopup","toUpperCase","DetailedBlog","match","params","window","userJwtToken","currentTime","Date","now","exp","location","clear","App","exact","path","component","ForgotPassword","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f79a667f.chunk.js","sourcesContent":["const initialState = {\n    blogs: [],\n    blogLoader: false,\n    blogSuccess: false,\n    category: null,\n    filteredBlogs: [],\n    author: null,\n    blog: {},\n    detailedBlog:null\n}\n\n\n\nconst blogReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SET_BLOG_LOADER\":\n            return {\n                ...state,\n                blogLoader: action.payload,\n                blogSuccess: false\n            }\n        case \"SET_CATEGORY_NULL\":\n            return {\n                ...state,\n                category: null,\n                blogSuccess: false\n            }\n        case \"SET_BLOG\":\n            return {\n                ...state,\n                blogLoader: false,\n                blogSuccess: true,\n                blogs: [action.payload, ...state.blogs]\n            }\n        case \"SET_BLOGS\":\n            return {\n                ...state,\n                blogLoader: false,\n                blogSuccess: false,\n                blogs: action.payload\n            }\n        case \"SET_CATEGORY\":\n            return {\n                ...state,\n                blogSuccess: false,\n                category: action.payload,\n                filteredBlogs: state.blogs.filter(obj => {\n                    return obj.category === action.payload\n                })\n                   \n            }\n        case \"SET_AUTHOR\":\n            return {\n                ...state,\n                blogSuccess: false,\n                author: action.payload,\n                filteredBlogs: state.blogs.filter(obj => {\n                    return obj.author === action.payload\n                })\n            }\n        case \"SET_CURRENT_BLOG\":\n            return {\n                ...state,\n                blogSuccess: false,\n                blog: state.blogs.find(obj => {\n                    return obj._id === action.payload\n                })\n\n            }\n        case \"DELETE_BLOG\":\n            return {\n                ...state,\n                blogSuccess: false,\n                blogs: state.blogs.filter(obj => {\n                    return obj._id !== action.payload\n                })\n            }\n        case \"UPDATE_BLOG\":\n            return {\n                ...state,\n                blogLoader: false,\n                blogSuccess: true,\n                blog: {},\n                blogs: state.blogs.map(blog=>blog._id === action.payload._id ? action.payload : blog)\n            }\n        case \"SET_DETAILED_BLOG\":\n            return {\n                ...state,\n                blogLoader: false,\n                blogSuccess: false,\n                detailedBlog: state.blogs.find(obj => {\n                    return obj._id === action.payload\n                })\n            }\n        case \"SET_DETAILED_BLOG_DB\":\n            return {\n                ...state,\n                blogLoader: false,\n                blogSuccess: false,\n                detailedBlog: action.payload\n            }\n        default:\n          return state\n    }\n}\n\nexport default blogReducer","const initialState = {\r\n    user: {},\r\n    isAuthenticated: false,\r\n    loader: false,\r\n    success: false\r\n}\r\n\r\n\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case \"SET_LOADER\":\r\n            return {\r\n                ...state,\r\n                loader: action.payload\r\n            }\r\n        case \"SET_USERS_DATA\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuthenticated: true,\r\n                loader: false,\r\n                success: true\r\n            }\r\n        case \"DELETE_USERS_DATA\":\r\n            return {\r\n                ...state,\r\n                user: action.payload,\r\n                isAuthenticated: false,\r\n                success: false\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default userReducer","const initialState = {\n    registerErrors: {},\n    loginErrors: {},\n    forgotPasswordErrors: {},\n    forgotPasswordHelperFlag: false,\n    updatePasswordErrors: {}\n};\n\nconst errorReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case \"SET_REGISTER_ERRORS\":\n            return {\n                ...state,\n                registerErrors: action.payload\n            }\n        case \"SET_LOGIN_ERRORS\":\n            return {\n                ...state,\n                loginErrors: action.payload\n            }\n        case \"SET_FORGOT_PASSWORD_ERRORS\":\n            return {\n                ...state,\n                forgotPasswordErrors: action.payload\n            }\n        case \"SET_FORGOT_PASSWORD_HELPER_FLAG\":\n            return {\n                ...state,\n                forgotPasswordHelperFlag: action.payload\n            }\n        case \"SET_UPDATE_PASSWORD_ERROR\":\n            return {\n                ...state,\n                updatePasswordErrors: action.payload\n            }\n        default:\n            return state;\n    }\n}\n\n\nexport default errorReducer","import { combineReducers } from 'redux';\nimport blogReducer from './blogReducer'\nimport userReducer from './userReducer'\nimport errorReducer from './errorReducer'\n\n\nexport default combineReducers({\n    userRoot: userReducer,\n    blogRoot: blogReducer,\n    errorRoot: errorReducer\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    compose(\n        applyMiddleware(...middleware)\n        // window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n    )\n);\n\nexport default store;\n\n\n","import axios from 'axios';\n\nconst setAuthToken = token => {\n    if (token) {\n        axios.defaults.headers.common['Authorization'] = token;\n    } else {\n        delete axios.defaults.headers.common['Authorization'];\n    }\n};\n\nexport default setAuthToken;","import axios from 'axios'\nimport setAuthToken from '../helper/setAuthToken'\nimport jwt_decode from 'jwt-decode'\n\n\nexport const userLoginHelper = (data) => {\n    return {\n        type: \"SET_USERS_DATA\",\n        payload: data\n    }\n}\n\nconst userLogoutHelper = (data) => {\n    return {\n        type: \"DELETE_USERS_DATA\",\n        payload: data\n    }\n}\n\nconst setLoader = (data) => {\n    return {\n        type: \"SET_LOADER\",\n        payload: data\n    }\n}\n\n\nexport const userRegister = (userRegisterCredentials) => {\n    return async (dispatch) => {\n        try {\n            dispatch(setLoader(true))\n            const { data } = await axios({\n                method: \"Post\",\n                url: \"/api/user/register\",\n                data: userRegisterCredentials\n            })\n            const { token } = data\n            localStorage.setItem('userJwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(userLoginHelper(decoded.user))\n\n        }\n        catch (err) {\n            dispatch({\n                type:\"SET_REGISTER_ERRORS\",\n                payload: err.response.data\n            })\n            console.log(\"Error in userRegister Action\", err.message)\n        }\n       \n    }\n}\n\nexport const userLogin = (userLoginCredentials,history) => {\n    return async (dispatch) => {\n        try {\n            dispatch(setLoader(true))\n            const { data } = await axios({\n                method: \"Post\",\n                url: \"/api/user/login\",\n                data: userLoginCredentials\n            })\n            const { token } = data\n            localStorage.setItem('userJwtToken', token);\n            setAuthToken(token);\n            const decoded = jwt_decode(token);\n            dispatch(userLoginHelper(decoded.user))\n        }\n        catch (err) {\n            dispatch({\n                type: \"SET_LOGIN_ERRORS\",\n                payload: err.response.data\n            })\n            console.log(\"Error in userLogin Action\", err.message)\n        }\n\n    }\n}\n\n\nexport const getOTP = (userEmail) => {\n    return async (dispatch) => {\n        try {\n            await axios({\n                method: 'Post',\n                url: '/api/user/forgotPassword',\n                data: userEmail\n            })\n            alert(\"Otp has been sent to your email\")\n            dispatch({\n                type: \"SET_FORGOT_PASSWORD_HELPER_FLAG\",\n                payload: true\n            })\n           \n        }\n        catch (err) {\n            dispatch({\n                type: \"SET_FORGOT_PASSWORD_ERRORS\",\n                payload: err.response.data\n            })\n            console.log(\"Error in getOTPUser\", err.message)\n        }\n    }\n}\n\nexport const submitOTP = (newPasswordWithOtp, history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: \"/api/user/postOTP\",\n                data: newPasswordWithOtp\n            })\n            alert(\"Password Update, kindly login with updated password\")\n            history.push('/')\n        }\n        catch (err) {\n            dispatch({\n                type: \"SET_FORGOT_PASSWORD_ERRORS\",\n                payload: err.response.data\n            })\n            console.log(\"Error in submitOTP\", err.message)\n        }\n    }\n}\n\nexport const updatePassword = (passwordData,history) => {\n    return async (dispatch) => {\n        try {\n            const { data } = await axios({\n                method: 'Post',\n                url: \"/api/user/updatePassword\",\n                data: passwordData\n            })\n            alert(\"Password Updated Successfully\")\n            history.push('/profile')\n        }\n        catch (err) {\n            dispatch({\n                type: \"SET_UPDATE_PASSWORD_ERROR\",\n                payload: err.response.data\n            })\n        }\n    }\n}\n\n\n\n\n\n\nexport const userLogout = () => {\n    return (dispatch) => {\n        localStorage.removeItem('userJwtToken');\n        setAuthToken(false);\n        dispatch(userLogoutHelper({}));\n    }\n}","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { getOTP, submitOTP } from '../redux/actions/userAction'\nimport classnames from 'classnames'\n\n\nconst ForgotPassword = (props) => {\n    const store = useSelector((store) => store.errorRoot)\n    const dispatch = useDispatch()\n    const history = useHistory()\n    const [email, setEmail] = useState('')\n    const [otp, setOtp] = useState('')\n    const [newPassword, setNewPassword] = useState('')\n    const [confirmNewPassword, setConfirmNewPassword] = useState(\"\")\n    const [errors, setErrors] = useState({})\n    const [helper, setHelper] = useState(false)\n    const [isLoading, setIsLoading] = useState(false)\n\n  \n    useEffect(() => {\n        if (store.forgotPasswordErrors) {\n            setErrors(store.forgotPasswordErrors)\n        }\n    }, [store.forgotPasswordErrors])\n\n    useEffect(() => {\n        if (store.forgotPasswordHelperFlag) {\n            setHelper(true)\n        }\n    }, [store.forgotPasswordHelperFlag])\n\n    const sendOTPHandler = (e) => {\n        e.preventDefault()\n        dispatch(getOTP({ email }))\n        setIsLoading(true)\n       \n    }\n    useEffect(() => {\n        if (store.forgotPasswordHelperFlag || store.forgotPasswordErrors) {\n            setIsLoading(false)\n        }\n       \n    }, [store.forgotPasswordHelperFlag, store.forgotPasswordErrors])\n\n    const submitOTPHandler = (e) => {\n        e.preventDefault()\n        dispatch(submitOTP({ email, otp, newPassword, confirmNewPassword }, history))\n       \n    }\n\n\n\n\n    return (\n        <div className=\"container mt-5\">\n            <div className=\"row\">\n                <div className=\"col-md-4 m-auto\">\n                    {!helper ? <>\n                        <form noValidate onSubmit={sendOTPHandler}>\n                            <div className=\"form-group\">\n                                <label htmlFor=\"exampleInputEmail11\">Email</label>\n                                <input onChange={(e) => setEmail(e.target.value)} value={email} type=\"email\" className={classnames('form-control', {\n                                    'is-invalid': errors.email\n                                })} id=\"exampleInputEmail11\" placeholder=\"Provide your registered email\" aria-describedby=\"emailHelp\" />\n                                <small id=\"emailHelp\" className=\"form-text text-muted\">OTP will be only valid for 5 minute.</small>\n                                {errors.email && (\n                                    <div className=\"invalid-feedback\">{errors.email}</div>\n                                )}\n                            </div>\n                            <div class=\"row justify-content-center\">\n                                <div class=\"col-md-1\">\n                                    {\n                                        isLoading && <div class=\"spinner-border text-primary\" role=\"status\">\n                                            <span class=\"sr-only\">Loading...</span>\n                                        </div>\n                                    }\n                                </div>\n                            </div>\n                            {!isLoading && <button type=\"submit\" className=\"btn btn-info btn-block\">Send OTP</button>}\n                            {/* <button type=\"submit\" className=\"btn btn-primary\">Send OTP</button> */}\n                        </form>\n                    </> : <>\n                            <form noValidate onSubmit={submitOTPHandler}>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail1\">OTP</label>\n                                    <input onChange={(e) => setOtp(e.target.value)} value={otp} type=\"number\" className={classnames('form-control', {\n                                        'is-invalid': errors.otp\n                                    })} id=\"exampleInputEmail1\" />\n                                    {errors.otp && (\n                                        <div className=\"invalid-feedback\">{errors.otp}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail2\">New Password</label>\n                                    <input onChange={(e) => setNewPassword(e.target.value)} value={newPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.newPassword\n                                    })} id=\"exampleInputEmail2\" />\n                                    {errors.newPassword && (\n                                        <div className=\"invalid-feedback\">{errors.newPassword}</div>\n                                    )}\n                                </div>\n                                <div className=\"form-group\">\n                                    <label htmlFor=\"exampleInputEmail3\">Confirm New Password</label>\n                                    <input onChange={(e) => setConfirmNewPassword(e.target.value)} value={confirmNewPassword} type=\"password\" className={classnames('form-control', {\n                                        'is-invalid': errors.confirmNewPassword\n                                    })} id=\"exampleInputEmail3\" />\n                                    {errors.confirmNewPassword && (\n                                        <div className=\"invalid-feedback\">{errors.confirmNewPassword}</div>\n                                    )}\n                                </div>\n                                <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\n                            </form>\n                        </>}\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default withRouter(ForgotPassword)\n","import React from 'react'\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <button className=\"btn btn-primary\" type=\"button\" disabled>\r\n            <span className=\"spinner-grow spinner-grow-sm\" role=\"status\" aria-hidden=\"true\"></span>\r\n            Loading...\r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Loader\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport Loader from '../components/Loader'\r\n\r\nimport {userLogin} from '../redux/actions/userAction'\r\n\r\nconst LoginForm = () => {\r\n    const user = useSelector(store=>store.userRoot)\r\n    const dispatch = useDispatch()\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [password, setPassword] = useState('')\r\n   \r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(userLogin({ email, password}))\r\n    }\r\n\r\n    return (\r\n\r\n        <div className=\"modal fade\" id=\"loginModal\" tabIndex=\"-1\" aria-labelledby=\"loginModal\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"loginModal\">LOGIN</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"emailId\">Email</label>\r\n                                <input onChange={(e)=>setEmail(e.target.value)} value={email} type=\"email\" className=\"form-control\" id=\"emailId\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"passwordId\">Password</label>\r\n                                <input onChange={(e) => setPassword(e.target.value)} valiue={password} type=\"password\" className=\"form-control\" id=\"passwordId\" />\r\n                            </div>\r\n                            {user.success && <div className=\"alert alert-success\" role=\"alert\">\r\n                                LoggedIn Successfully\r\n                            </div>}\r\n                            {user.loader ? <Loader /> : <button type=\"submit\" className=\"btn btn-primary\">Submit</button>}\r\n                            <Link to=\"#\" > Forgot Password ?</Link>\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default LoginForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\n\r\n\r\nimport { userRegister } from '../redux/actions/userAction'\r\n\r\nimport Loader from '../components/Loader'\r\n\r\nconst SignUpForm = () => {\r\n    const user = useSelector((store)=>store.userRoot)\r\n    const dispatch = useDispatch()\r\n    \r\n    const [name, setName] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n\r\n    const formHandler = (e) => {\r\n        e.preventDefault()\r\n        if (password !== confirmPassword) {\r\n            alert(\"password Mismatch\")\r\n        }\r\n        else {\r\n            dispatch(userRegister({ name, email, password, confirmPassword }))\r\n            setName(\"\")\r\n            setEmail(\"\")\r\n            setPassword(\"\")\r\n            setConfirmPassword(\"\")\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"modal fade\" id=\"signUpModal\" tabIndex=\"-1\" aria-labelledby=\"signUpModal\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"signUpModal\">SIGN UP</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nameId\">Name</label>\r\n                                <input onChange={(e)=>setName(e.target.value)} type=\"text\" className=\"form-control\" id=\"nameId\" aria-describedby=\"emailHelp\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"emailId\">Email</label>\r\n                                <input onChange={(e) => setEmail(e.target.value)} type=\"email\" className=\"form-control\" id=\"emailId\"/>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"passwordId\">Password</label>\r\n                                <input onChange={(e) => setPassword(e.target.value)} type=\"password\" className=\"form-control\" id=\"passwordId\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"confirmPasswordId\">Confirm Password</label>\r\n                                <input onChange={(e) => setConfirmPassword(e.target.value)} type=\"password\" className=\"form-control\" id=\"confirmPasswordId\" />\r\n                            </div>\r\n                            {user.success && <div className=\"alert alert-success\" role=\"alert\">\r\n                                Your account has been Successfully Registered..\r\n                            </div>}\r\n                            {user.loader ? <Loader /> : <button type=\"submit\" className=\"btn btn-primary\">Submit</button> }\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SignUpForm\r\n"," const Blogs = [\r\n    { id: 1, title: \"FOOD\" },\r\n    { id: 2, title: \"TRAVEL\" },\r\n    { id: 3, title: \"FASHION\" },\r\n    { id: 4, title: \"MUSIC\" },\r\n    { id: 5, title: \"LIFE STYLE\" },\r\n    { id: 6, title: \"FINTESS\" },\r\n    { id: 7, title: \"SPORTS\" },\r\n    { id: 8, title: \"DIY\" },\r\n    { id: 9, title: \"FINANCE\" },\r\n    { id: 10, title: \"POLITICAL\" },\r\n    { id: 11, title: \"PARENTING\" },\r\n    { id: 12, title: \"BUSINESS\" },\r\n    { id: 13, title: \"PERSONAL\" },\r\n    { id: 14, title: \"MOVIE\" },\r\n    { id: 15, title: \"AUTOMOBILE\" },\r\n    { id: 15, title: \"NEWS\" },\r\n    { id: 16, title: \"PET\" },\r\n    { id: 17, title: \"GAMING\" },\r\n]\r\n\r\n\r\nexport default Blogs","import axios from 'axios'\r\n\r\n\r\n\r\nexport const setBlog = (data) => {\r\n    return {\r\n        type: \"SET_BLOG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const setBlogs = (data) => {\r\n    return {\r\n        type: \"SET_BLOGS\",\r\n        payload: data\r\n    }\r\n}\r\nexport const setCategory = (data) => {\r\n    return {\r\n        type: \"SET_CATEGORY\",\r\n        payload: data\r\n     }\r\n }\r\n\r\nexport const setCategoryNull = () => {\r\n    return {\r\n         type: \"SET_CATEGORY_NULL\"\r\n     }\r\n}\r\n \r\nexport const setAuthor = (data) => {\r\n    return {\r\n        type: \"SET_AUTHOR\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const setAuthorNull = (data) => {\r\n    return {\r\n        type: \"SET_AUTHOR\"\r\n    }\r\n}\r\n\r\nexport const setCurrentBlog = (data) => {\r\n    return {\r\n        type: \"SET_CURRENT_BLOG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst setBlogLoader = (data) => {\r\n    return {\r\n        type: \"SET_BLOG_LOADER\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\nconst deleteBlogHelper = (data) => {\r\n    return {\r\n        type: \"DELETE_BLOG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst updateBlogHelper = (data) => {\r\n    return {\r\n        type: \"UPDATE_BLOG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const deailedBlogHelper = (data) => {\r\n    return {\r\n        type: \"SET_DETAILED_BLOG\",\r\n        payload: data\r\n    }\r\n}\r\n\r\nconst deailedBlogHelperDb = (data) => {\r\n    return {\r\n        type: \"SET_DETAILED_BLOG_DB\",\r\n        payload: data\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const addBlog = (blogData) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(setBlogLoader(true))\r\n            const { data } = await axios({\r\n                method: \"Post\",\r\n                url: \"/api/blog\",\r\n                data: blogData\r\n            })\r\n            if (data.success) {\r\n                dispatch(setBlog(data.message))\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in userRegister Action\", err.message)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const getBlog = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(setBlogLoader(true))\r\n            const { data } = await axios({\r\n                method: \"Get\",\r\n                url: \"/api/blog\",\r\n            })\r\n            if (data.success) {\r\n                dispatch(setBlogs(data.message))\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in userRegister Action\", err.message)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const deleteBlog = (_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n           dispatch(setBlogLoader(true))\r\n            const { data } = await axios({\r\n                method: \"Delete\",\r\n                url: `/api/blog/${_id}`,\r\n            })\r\n            if (data.success) {\r\n                dispatch(deleteBlogHelper(_id))\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in userRegister Action\", err.message)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const updateBlog = (blogData,_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(setBlogLoader(true))\r\n            const { data } = await axios({\r\n                method: \"Put\",\r\n                url: `/api/blog/${_id}`,\r\n                data: blogData\r\n            })\r\n            if (data.success) {\r\n                dispatch(updateBlogHelper(data.message))\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in userRegister Action\", err.message)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport const detailedBlogDb= (_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            dispatch(setBlogLoader(true))\r\n            const { data } = await axios({\r\n                method: \"Get\",\r\n                url: `/api/blog/${_id}`,\r\n            })\r\n            if (data.success) {\r\n                dispatch(deailedBlogHelperDb(data.message))\r\n            }\r\n        }\r\n        catch (err) {\r\n            console.log(\"Error in userRegister Action\", err.message)\r\n        }\r\n\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Blogs from '../utils/categories'\r\nimport Loader from '../components/Loader'\r\n\r\nimport {addBlog} from '../redux/actions/blogAction'\r\n\r\nconst BlogForm = () => {\r\n    const blogStore = useSelector((store) => store.blogRoot)\r\n    const dispatch = useDispatch()\r\n\r\n    const [title, setTitle] = useState('')\r\n    const [blog, setBlog] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [image, setImage] = useState('')\r\n\r\n\r\n    const imagehandler = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setImage(img)\r\n        }\r\n    }\r\n\r\n\r\n    const formHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append(\"title\", title)\r\n        formData.append(\"blog\", blog)\r\n        formData.append(\"category\", category)\r\n        if (image !== \"\") {\r\n            formData.append(\"image\", image)\r\n        }\r\n        dispatch(addBlog(formData))\r\n        setTitle(\"\")\r\n        setBlog(\"\")\r\n    }\r\n    return (\r\n        <div className=\"modal fade\" id=\"createBlog\" tabIndex=\"-1\" aria-labelledby=\"createBlog\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"createBlog\">CREATE BLOG</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form onSubmit={formHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nameId\">TITLE</label>\r\n                                <input onChange={(e)=>setTitle(e.target.value)} type=\"text\" className=\"form-control\" id=\"nameId\" aria-describedby=\"emailHelp\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"categoryId\">Category</label>\r\n                                <select onChange={(e) => setCategory(e.target.value)} className=\"form-control\"\r\n                                    id=\"categoryId\">\r\n                                    <option>Select</option>\r\n                                    {Blogs.map((blog,index)=>\r\n                                        <option key={index} value={blog.title}>{blog.title}</option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"blogId\">BLOG</label>\r\n                                <textarea onChange={(e) => setBlog(e.target.value)} type=\"text\" className=\"form-control\" id=\"blogId\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputId\">PICTURE</label>\r\n                                <input className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\r\n                            </div>\r\n                            {blogStore.blogSuccess && <div className=\"alert alert-success\" role=\"alert\">\r\n                                Blog Added Successfully\r\n                            </div>}\r\n                            {blogStore.blogLoader ? <Loader /> : <button type=\"submit\" className=\"btn btn-primary\">Create</button>}\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default BlogForm\r\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport Blogs from '../utils/categories'\r\nimport Loader from '../components/Loader'\r\n\r\nimport { updateBlog } from '../redux/actions/blogAction'\r\n\r\nconst UpdateBlog = () => {\r\n\r\n    const [title, setTitle] = useState(\"\")\r\n    const [blog, setBlog] = useState(\"\")\r\n    const [category, setCategory] = useState(\"\")\r\n    const [image, setImage] = useState('')\r\n\r\n    const blogStore = useSelector(store => store.blogRoot)\r\n    const dispatch = useDispatch()\r\n\r\n\r\n    useEffect(() => {\r\n        if (blogStore.blog.title) {\r\n            setTitle(blogStore.blog.title)\r\n            setBlog(blogStore.blog.blog)\r\n            setCategory(blogStore.blog.category)\r\n        }\r\n\r\n    }, [blogStore.blog])\r\n\r\n\r\n    const imagehandler = (e) => {\r\n        if (e.target.files && e.target.files[0]) {\r\n            let img = e.target.files[0]\r\n            setImage(img)\r\n        }\r\n    }\r\n\r\n\r\n    const updateFormHandler = async (e) => {\r\n        e.preventDefault()\r\n        const formData = new FormData()\r\n        formData.append(\"title\", title)\r\n        formData.append(\"blog\", blog)\r\n        formData.append(\"category\", category)\r\n        formData.append(\"image\", image)\r\n        dispatch(updateBlog({ title, blog, category, image }, blogStore.blog._id,))\r\n    }\r\n    return (\r\n        <div className=\"modal fade\" id=\"updateBlog\" tabIndex=\"-1\" aria-labelledby=\"updateBlog\" aria-hidden=\"true\">\r\n            <div className=\"modal-dialog\">\r\n                <div className=\"modal-content\">\r\n                    <div className=\"modal-header\">\r\n                        <h5 className=\"modal-title\" id=\"updateBlog\">UPDATE BLOG</h5>\r\n                        <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n                            <span aria-hidden=\"true\">&times;</span>\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"modal-body\">\r\n                        <form onSubmit={updateFormHandler}>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"nameId\">TITLE</label>\r\n                                <input value={title} onChange={(e) => setTitle(e.target.value)} type=\"text\" className=\"form-control\" id=\"nameId\" aria-describedby=\"emailHelp\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"categoryId\">Category</label>\r\n                                <select value={category} onChange={(e) => setCategory(e.target.value)} className=\"form-control\"\r\n                                    id=\"categoryId\">\r\n                                    <option>Select</option>\r\n                                    {Blogs.map((blog, index) =>\r\n                                        <option key={index} value={blog.title}>{blog.title}</option>\r\n                                    )}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"blogId\">BLOG</label>\r\n                                <textarea onChange={(e) => setBlog(e.target.value)} value={blog} type=\"text\" className=\"form-control\" id=\"blogId\" />\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label htmlFor=\"inputId\">PICTURE</label>\r\n                                <input className=\"form-control\" type=\"file\" accept=\".jpg,.png,.jpeg\" id=\"inputId\" onChange={imagehandler}></input>\r\n                            </div>\r\n                            {blogStore.blogSuccess && <div className=\"alert alert-success\" role=\"alert\">\r\n                                Blog Updated Successfully\r\n                            </div>}\r\n                            {blogStore.blogLoader ? <Loader /> : <button type=\"submit\" className=\"btn btn-primary\">Update</button>}\r\n                        </form>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <button type=\"button\" className=\"btn btn-secondary\" data-dismiss=\"modal\">Close</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default UpdateBlog\r\n","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\n            \r\nimport {setCurrentBlog, deleteBlog} from '../redux/actions/blogAction'\r\n\r\nconst Card = ({ blog }) => {\r\n    const user = useSelector(store => store.userRoot.user)\r\n    const dispatch = useDispatch()\r\n\r\n    return (\r\n        <>\r\n            <div className=\"col-md-6\">\r\n                <div style={{height:\"300px\"}} className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\">\r\n                    <div className=\"col p-4 d-flex flex-column position-static\">\r\n                        <strong className=\"d-inline-block mb-2 text-primary\"> {blog.author}</strong>\r\n                        <h3 className=\"mb-0\">{blog.title}</h3>\r\n                        <div className=\"mb-1 text-muted\">{blog.category}</div>\r\n                        <p className=\"card-text\">{blog.blog.length > 150 ? blog.blog.slice(0, 150) : blog.blog}\r\n                            {blog.blog.length > 150 ? <Link to={`/blog/${blog._id}`} >Read More</Link> : null}\r\n                        </p>\r\n                        {user.id === blog.user ? <div>\r\n                            <button onClick={()=>dispatch(setCurrentBlog(blog._id))} className=\"btn btn-outline-primary mx-1\" data-toggle=\"modal\" data-target=\"#updateBlog\">UPDATE</button>\r\n                            <button onClick={() => dispatch(deleteBlog(blog._id))} className=\"btn btn-outline-danger mx-1\">DELETE</button>\r\n                        </div> :\r\n                                <div>\r\n                                <button onClick={() => alert(\"working on it, soon it will be functional\")} className=\"btn btn-outline-info mx-1\">ADD TO FAVOURITE</button>\r\n                                </div>\r\n                        }\r\n                    </div>\r\n                    <div className=\"\">\r\n                        {blog.image && <img className=\"img-fluid\"  width=\"250px\"  src={blog.image}></img>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useEffect } from 'react'\nimport { useSelector, useDispatch } from 'react-redux'\nimport LoginForm from '../components/LoginForm'\nimport SignUpForm from '../components/SignUpForm'\nimport BlogForm from '../components/BlogForm'\nimport UpdateBlog from '../components/UpdateBlog'\nimport Loader from '../components/Loader'\n\nimport { getBlog } from '../redux/actions/blogAction'\nimport Card from '../components/Card'\n\nconst Home = () => {\n    const blogStore = useSelector(store => store.blogRoot)\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        if (blogStore.blogs.length === 0) {\n            dispatch(getBlog())\n        }\n    }, [])\n    \n    return (\n        <>\n            <LoginForm />\n            <SignUpForm />\n            <BlogForm />\n            <UpdateBlog />\n            <div className=\"container-fluid\" style={{ marginTop: \"100px\" }}>\n                {blogStore.blogs.length === 0 && <Loader />}\n                <div className=\"row mb-2\">\n                    {blogStore.category || blogStore.author  ? blogStore.filteredBlogs.map(blog =>\n                        <Card key={blog._id} blog={blog} />\n                    ) :\n                        blogStore.blogs.map(blog =>\n                            <Card key={blog._id} blog={blog} />\n                   )\n                }\n                </div>\n            </div>\n        </>\n    )\n}\n\nexport default Home\n","import React from 'react'\r\nimport { useDispatch } from 'react-redux'\r\nimport {setCategory} from '../redux/actions/blogAction'\r\n\r\nconst CategoryList = ({ blog }) => {\r\n    const dispatch = useDispatch()\r\n    const clickHandler = () => {\r\n        dispatch(setCategory(blog.title))\r\n    }\r\n    return (\r\n        <>\r\n            <button onClick={clickHandler} className=\"btn dropdown-item\">{blog.title}</button>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoryList\r\n","import React, { useState, useEffect } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useSelector, useDispatch } from 'react-redux'\nimport { userLogout } from '../redux/actions/userAction'\nimport { setCategoryNull,setAuthor } from '../redux/actions/blogAction'\n\n\nimport CategoryList from './CategoryList'\n\nimport Blogs from '../utils/categories'\n\n\nconst Navbar = () => {\n    const history = useHistory()\n    const user = useSelector(store => store.userRoot)\n    const blog = useSelector(store => store.blogRoot)\n    \n    const [author, setauthor] = useState(\"\")\n    const dispatch = useDispatch()\n    const logoutHandler = () => {\n        dispatch(userLogout())\n    }\n\n    const clickHandler = () => {\n        dispatch(setCategoryNull())\n    }\n\n    const formHandler = (e) => {\n        e.preventDefault()\n        dispatch(setAuthor(author))\n        setauthor(\"\")\n    }\n\n    return (\n        <>\n\n            {/* NAVBAR */}\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-info fixed-top\">\n                <div className=\"container-fluid\">\n                   \n                    <a className=\"btn\" className=\"navbar-brand\">BLOGGBOT</a>\n                    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\n                        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                        <span className=\"navbar-toggler-icon\"></span>\n                    </button>\n\n                    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n                        <ul className=\"navbar-nav mr-auto\">\n                            {user.isAuthenticated && <li className=\"nav-item active\">\n                                <a className=\"btn btn-primary mx-1\" data-toggle=\"modal\" data-target=\"#createBlog\">\n                                    CREATE BLOG  </a>\n                            </li>}\n                           \n                            <li className=\"nav-item dropdown\">\n                                <a className=\"nav-link dropdown-toggle\" href=\"#\" id=\"navbarDropdown\" role=\"button\" data-toggle=\"dropdown\"\n                                    aria-haspopup=\"true\" aria-expanded=\"false\">\n                                    {blog.category ? blog.category : \"CHOOSE CATEGORY\"}\n                         </a>\n                                <div className=\"dropdown-menu\" aria-labelledby=\"navbarDropdown\">\n                                    <button onClick={clickHandler} className=\"btn dropdown-item\">ALL</button>\n                                    {Blogs.map((blog,index) =>\n                                        <CategoryList key={index} blog={blog} />\n                                    )}\n                                </div>\n                            </li>\n                        </ul>\n                        <form onSubmit={formHandler} className=\"form-inline my-2 my-lg-0\">\n                            <input onChange={(e) => setauthor(e.target.value)} value={author} className=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search Author . . .\" aria-label=\"Search\" />\n                            <button className=\"btn btn-outline-light my-2 my-sm-0\" type=\"submit\">Search</button>\n                        </form>\n                        {!user.isAuthenticated ?\n                            <div className=\"mx-5\">\n                                <button type=\"button\" className=\"btn btn-primary mx-1\" data-toggle=\"modal\" data-target=\"#signUpModal\">\n                                    Sign Up  </button>\n                                <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#loginModal\">\n                                    Login </button>\n                            </div>\n                            :\n                            <div className=\"mx-1\">\n                                <button onClick={()=>alert(\"working on it, soon it will be functional\")} type=\"button\" className=\"btn btn-primary mx-1\">\n                                   {user.user.name.toUpperCase()} </button>\n                                <button onClick={logoutHandler} type=\"button\" className=\"btn btn-danger\">\n                                   LOGOUT </button>\n                            </div>\n                        }\n                    </div>\n                </div>\n            </nav>\n\n        </>\n\n\n    )\n}\n\nexport default React.memo(Navbar)\n","import React, { useState, useEffect } from 'react'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { deailedBlogHelper, detailedBlogDb} from '../redux/actions/blogAction'\r\n\r\nconst DetailedBlog = (props) => {\r\n    const history = useHistory()\r\n    const store = useSelector(store => store.blogRoot)\r\n    const [blog,setBlog] = useState(null)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (store.blogs.length === 0) {\r\n            dispatch(detailedBlogDb(props.match.params.id))\r\n        }\r\n        else {\r\n            dispatch(deailedBlogHelper(props.match.params.id))\r\n       }\r\n        \r\n    }, [props.match.params.id])\r\n    \r\n    useEffect(() => {\r\n        if (store.detailedBlog) {\r\n            setBlog(store.detailedBlog)\r\n        }\r\n    },[store.detailedBlog])\r\n    \r\n    return (\r\n    <>\r\n            {\r\n            \r\n            blog ? <div className=\"container\" style={{ marginTop: \"100px\" }}>\r\n                <div className=\"row mb-2\">\r\n                    <div className=\"col-md-8 offset-md-2\">\r\n                        <div className=\"row no-gutters border rounded overflow-hidden flex-md-row mb-4 shadow-sm h-md-250 position-relative\">\r\n                            <div className=\"col p-4 d-flex flex-column position-static\">\r\n                                <strong className=\"d-inline-block mb-2 text-primary\"> {blog.author}</strong>\r\n                                <h3 className=\"mb-0\">{blog.title}</h3>\r\n                                <div className=\"mb-1 text-muted\">{blog.category}</div>\r\n                                <p className=\"card-text\">{blog.blog}\r\n\r\n                                </p>\r\n                                <div>\r\n                                    <button onClick={()=>history.push('/')} className=\"btn btn-outline-success\">GO BACK</button>\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div className=\"\">\r\n                                {blog.image && <img className=\"img-fluid\" width=\"250px\" src={blog.image}></img>}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div> : null }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default DetailedBlog\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport jwt_decode from 'jwt-decode';\nimport {userLoginHelper, userLogout} from './redux/actions/userAction'\nimport setAuthToken from './redux/helper/setAuthToken'\nimport store from './redux/store'\n\n//Components\nimport ForgotPassword from './pages/ForgotPassword'\nimport Home from './pages/Home'\nimport Navbar from './components/Navbar'\nimport DetailedBlog from './components/DetailedBlog'\n\nif (window.localStorage.userJwtToken) {\n  setAuthToken(localStorage.userJwtToken);\n  const decoded = jwt_decode(localStorage.userJwtToken);\n  store.dispatch(userLoginHelper(decoded.user))\n  const currentTime = Date.now() / 1000;\n  if (decoded.exp < currentTime) {\n    store.dispatch(userLogout());\n    window.location.href = '/';\n  }\n}\n\nconsole.clear()\n\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <Router>\n        <Switch>\n          <Route exact path='/' component={Home} />\n          <Route exact path='/blog/:id' component={DetailedBlog} />\n          <Route exact path=\"/forgotPassword\" component={ForgotPassword} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport store from './redux/store'\nimport { Provider } from 'react-redux'\nimport App from './App';\n\nReactDOM.render(\n  \n    <Provider store = {store}>\n      <App />\n    </Provider>\n   ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}